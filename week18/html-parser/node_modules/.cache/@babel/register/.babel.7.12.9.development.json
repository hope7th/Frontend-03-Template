{
  "{\"sourceRoot\":\"/Users/htjc-yu/Desktop/js1000hours/training/工具链18/html-parser/test/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/htjc-yu/Desktop/js1000hours/training/工具链18/html-parser\",\"filename\":\"/Users/htjc-yu/Desktop/js1000hours/training/工具链18/html-parser/test/parser-test.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/htjc-yu/Desktop/js1000hours/training/工具链18/html-parser\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.9": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/htjc-yu/Desktop/js1000hours/training/工具链18/html-parser/test/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/htjc-yu/Desktop/js1000hours/training/工具链18/html-parser",
      "filename": "/Users/htjc-yu/Desktop/js1000hours/training/工具链18/html-parser/test/parser-test.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/htjc-yu/Desktop/js1000hours/training/工具链18/html-parser",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/htjc-yu/Desktop/js1000hours/training/工具链18/html-parser/test/parser-test.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/htjc-yu/Desktop/js1000hours/training/工具链18/html-parser/test/parser-test.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/htjc-yu/Desktop/js1000hours/training/工具链18/html-parser/test/",
        "sourceFileName": "parser-test.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _parser = require(\"../src/parser.js\");\n\nvar assert = require(\"assert\");\n\ndescribe('parse html', function () {\n  it('<a>abc</a>', function () {\n    (0, _parser.paserHTML)('<a>abc</a>');\n    assert.equal(1, 1);\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhcnNlci10ZXN0LmpzIl0sIm5hbWVzIjpbImFzc2VydCIsInJlcXVpcmUiLCJkZXNjcmliZSIsIml0IiwiZXF1YWwiXSwibWFwcGluZ3MiOiI7O0FBQ0E7O0FBREEsSUFBSUEsTUFBTSxHQUFHQyxPQUFPLENBQUMsUUFBRCxDQUFwQjs7QUFFQUMsUUFBUSxDQUFDLFlBQUQsRUFBZSxZQUFNO0FBQ3pCQyxFQUFBQSxFQUFFLENBQUMsWUFBRCxFQUFlLFlBQU07QUFDbkIsMkJBQVUsWUFBVjtBQUNBSCxJQUFBQSxNQUFNLENBQUNJLEtBQVAsQ0FBYSxDQUFiLEVBQWdCLENBQWhCO0FBQ0gsR0FIQyxDQUFGO0FBSUgsQ0FMTyxDQUFSIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9odGpjLXl1L0Rlc2t0b3AvanMxMDAwaG91cnMvdHJhaW5pbmcv5bel5YW36ZO+MTgvaHRtbC1wYXJzZXIvdGVzdC8iLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYXNzZXJ0ID0gcmVxdWlyZShcImFzc2VydFwiKTtcbmltcG9ydCB7cGFzZXJIVE1MfSBmcm9tIFwiLi4vc3JjL3BhcnNlci5qc1wiXG5kZXNjcmliZSgncGFyc2UgaHRtbCcsICgpID0+IHtcbiAgICBpdCgnPGE+YWJjPC9hPicsICgpID0+IHtcbiAgICAgICAgcGFzZXJIVE1MKCc8YT5hYmM8L2E+Jyk7XG4gICAgICAgIGFzc2VydC5lcXVhbCgxLCAxKTtcbiAgICB9KTtcbn0pOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "parser-test.js"
      ],
      "names": [
        "assert",
        "require",
        "describe",
        "it",
        "equal"
      ],
      "mappings": ";;AACA;;AADA,IAAIA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAApB;;AAEAC,QAAQ,CAAC,YAAD,EAAe,YAAM;AACzBC,EAAAA,EAAE,CAAC,YAAD,EAAe,YAAM;AACnB,2BAAU,YAAV;AACAH,IAAAA,MAAM,CAACI,KAAP,CAAa,CAAb,EAAgB,CAAhB;AACH,GAHC,CAAF;AAIH,CALO,CAAR",
      "sourceRoot": "/Users/htjc-yu/Desktop/js1000hours/training/工具链18/html-parser/test/",
      "sourcesContent": [
        "var assert = require(\"assert\");\nimport {paserHTML} from \"../src/parser.js\"\ndescribe('parse html', () => {\n    it('<a>abc</a>', () => {\n        paserHTML('<a>abc</a>');\n        assert.equal(1, 1);\n    });\n});"
      ]
    },
    "sourceType": "script",
    "mtime": 1607043406000
  },
  "{\"sourceRoot\":\"/Users/htjc-yu/Desktop/js1000hours/training/工具链18/html-parser/src/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/htjc-yu/Desktop/js1000hours/training/工具链18/html-parser\",\"filename\":\"/Users/htjc-yu/Desktop/js1000hours/training/工具链18/html-parser/src/parser.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/htjc-yu/Desktop/js1000hours/training/工具链18/html-parser\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.9": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/htjc-yu/Desktop/js1000hours/training/工具链18/html-parser/src/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/htjc-yu/Desktop/js1000hours/training/工具链18/html-parser",
      "filename": "/Users/htjc-yu/Desktop/js1000hours/training/工具链18/html-parser/src/parser.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/htjc-yu/Desktop/js1000hours/training/工具链18/html-parser",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/htjc-yu/Desktop/js1000hours/training/工具链18/html-parser/src/parser.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/htjc-yu/Desktop/js1000hours/training/工具链18/html-parser/src/parser.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/htjc-yu/Desktop/js1000hours/training/工具链18/html-parser/src/",
        "sourceFileName": "parser.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.paserHTML = paserHTML;\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar css = require(\"css\");\n\nvar layout = require(\"./4_1_layout.js\");\n\nvar cunrrentToken = null;\nvar cunrrentAttribute = null;\nvar stack = [{\n  type: \"document\",\n  children: []\n}];\nvar cunrrentTextNode = null;\nvar rules = [];\n\nfunction specificity(selector) {\n  var p = [0, 0, 0, 0];\n  var selectorParts = selector.split(\" \");\n\n  var _iterator = _createForOfIteratorHelper(selectorParts),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var part = _step.value;\n\n      if (part.charAt(0) == \"#\") {\n        p[1] += 1;\n      } else if (part.charAt(0) == \".\") {\n        p[2] += 1;\n      } else {\n        p[3] += 1;\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return p;\n}\n\nfunction compare(sp1, sp2) {\n  if (sp1[0] - sp2[0]) return sp1[0] - sp2[0];\n  if (sp1[1] - sp2[1]) return sp1[1] - sp2[1];\n  if (sp1[2] - sp2[2]) return sp1[2] - sp2[2];\n  return sp1[3] - sp2[3];\n}\n\nfunction addCSSRules(text) {\n  var ast = css.parse(text);\n  console.log(JSON.stringify(ast, null, \"  \"));\n  rules.push.apply(rules, _toConsumableArray(ast.stylesheet.rules));\n}\n\nfunction match(element, selector) {\n  if (!selector || !element.attibutes) return false;\n\n  if (selector.charAt(0) == \"#\") {\n    var attr = element.attibutes.filter(function (attr) {\n      return attr.name === \"id\";\n    })[0];\n    if (attr && attr.value === selector.replace(\"#\", '')) return true;\n  } else if (selector.charAt(0) == \".\") {\n    var attr = element.attibutes.filter(function (attr) {\n      return attr.name === \"class\";\n    })[0];\n    if (attr && attr.value === selector.replace(\"#\", '.')) return true;\n  } else {\n    if (element.tagName === selector) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction computeCSS(element) {\n  console.log(rules);\n  console.log(\"comput CSS for Element\", element);\n  var element = stack.slice().reverse();\n  if (!element.computedStyle) element.computedStyle = {};\n\n  var _iterator2 = _createForOfIteratorHelper(rules),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var rule = _step2.value;\n      var selectorParts = rule.selectors[0].splict(\" \").reverse();\n      if (!match(element.selectorParts[0])) continue;\n      var matched = false;\n      var j = 1;\n\n      for (var i = 0; i < element.length; i++) {\n        if (match(element[i], selectorParts[j])) {\n          j++;\n        }\n      }\n\n      ;\n      if (j > selectorParts.length) matched = true;\n\n      if (matched) {\n        var sp = specificity(rule.selectors[0]);\n        var computedStyle = element.computedStyle;\n\n        var _iterator3 = _createForOfIteratorHelper(rule.declarations),\n            _step3;\n\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var declaration = _step3.value;\n            if (!computedStyle[declaration.property]) computedStyle[declaration.property] = {};\n\n            if (!computedStyle[declaration.property].specificity) {\n              computedStyle[declaration.property].value = declaration.value;\n              computedStyle[declaration.property].specificity = sp;\n            } else if (compare(computedStyle[declaration.property].specificity, sp) < 0) {\n              computedStyle[declaration.property].value = declaration.value;\n              computedStyle[declaration.property].specificity = sp;\n            }\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n\n        console.log(\"Element\", element, \"matched rule\", rule);\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n}\n\nfunction emit(token) {\n  console.log(token);\n  var top = stack[stack.length - 1];\n\n  if (token.type == \"startTag\") {\n    var element = {\n      type: \"element\",\n      children: [],\n      attibutes: []\n    };\n    element.tagName = token.tagName;\n\n    for (var p in token) {\n      if (p != token && p != \"tagName\") {\n        element.attibutes.push({\n          name: p,\n          value: token[p]\n        });\n      }\n    }\n\n    computeCSS(element);\n    top.children.push(element);\n    element.parent = top;\n\n    if (!token.isSelfClosing) {\n      stack.push(element);\n    }\n\n    cunrrentTextNode = null;\n  } else if (token.type == \"endTag\") {\n    if (token.tagName != token.tagName) {\n      throw new Error(\"Tag start end doesn't match\");\n    } else {\n      if (top.tagName === \"style\") {\n        addCSSRules(top.children[0].content);\n      }\n\n      layout(top);\n      stack.pop();\n    }\n\n    cunrrentTextNode = null;\n  } else if (token.type == \"text\") {\n    if (cunrrentTextNode == null) {\n      cunrrentTextNode = {\n        type: \"text\",\n        content: \"\"\n      };\n      top.children.push(cunrrentTextNode);\n    }\n\n    cunrrentTextNode.content += token.content;\n  }\n}\n\nvar EOF = Symbol(\"EOF\");\n\nfunction data(c) {\n  if (c == \"<\") {\n    return tagOpen;\n  } else if (c == EOF) {\n    emit({\n      type: \"EOF\"\n    });\n    return;\n  } else {\n    emit({\n      type: \"text\",\n      content: c\n    });\n    return data;\n  }\n}\n\nfunction tagOpen(c) {\n  if (c == \"/\") {\n    return endTagOpen;\n  } else if (c.match(/^[a-zA-Z$]/)) {\n    cunrrentToken = {\n      type: \"startTag\",\n      tagName: \"\"\n    };\n    return tagName(c);\n  } else {\n    return;\n  }\n}\n\nfunction endTagOpen(c) {\n  if (c.match(/^[a-zA-Z]¥/)) {\n    cunrrentToken = {\n      type: \"endTag\",\n      tagName: \"\"\n    };\n    return tagName(c);\n  } else if (c == \">\") {} else if (c == EOF) {} else {}\n}\n\nfunction tagName(c) {\n  if (c.match(/^[\\t\\n\\g ]$/)) {\n    return beforeAttributeName;\n  } else if (c == \"/\") {\n    return selfCloseingStartTag;\n  } else if (c.match(/^[a-zA-Z]$/)) {\n    cunrrentToken.tagName += c;\n    return tagName;\n  } else if (c == \">\") {\n    return data;\n  } else {\n    return tagName;\n  }\n}\n\nfunction beforeAttributeName(c) {\n  if (c.match(/^[\\t\\n\\f ]$/)) {\n    return beforeAttributeName;\n  } else if (c == \">\" || c == \"/\" || c == EOF) {\n    return afterAttributeName(c);\n  } else if (c == \"=\") {} else {\n    cunrrentAttribute = {\n      name: \"\",\n      value: \"\"\n    };\n    return attributeName(c);\n  }\n}\n\nfunction afterAttributeName(c) {\n  if (c.match(/^[\\t\\n\\f ]$/) || c == \"/\" || c == EOF) {\n    return afterAttributeName(c);\n  } else if (c == \"=\") {\n    return beforeAttributeValue;\n  } else if (c == \"\\0\") {} else if (c == \"\\\"\" || C == \"'\" || c == \"<\") {} else {\n    cunrrentAttribute.name += c;\n    return attributeName;\n  }\n}\n\nfunction beforeAttributeValue(c) {\n  if (c.match(/^[\\t\\n\\f ]$/) || c == \"/\" || c == EOF) {\n    return beforeAttributeValue;\n  } else if (c == \"\\\"\") {\n    return doubleQuotedAttributeValue;\n  } else if (c == \"\\'\") {\n    return singleQuotedAttributeValue;\n  } else if (c == \">\") {} else {\n    return UnquotedAttributeValue(c);\n  }\n}\n\nfunction doubleQuotedAttributeValue(c) {\n  if (c == \"\\\"\") {\n    cunrrentToken[cunrrentAttribute.name] = cunrrentAttribute.value;\n    return afterQuotedAttributeValue;\n  } else if (c == \"\\0\") {} else if (c == EOF) {} else {\n    cunrrentAttribute.value += c;\n    return doubleQuotedAttributeValue;\n  }\n}\n\nfunction singleQuotedAttributeValue(c) {\n  if (c == \"\\'\") {\n    cunrrentToken[cunrrentAttribute.name] = cunrrentAttribute.value;\n    return afterQuotedAttributeValue;\n  } else if (c == \"\\0\") {} else if (c == EOF) {} else {\n    cunrrentAttribute.value += c; //    return singleQuotedAttributeValue 奇怪\n\n    return doubleQuotedAttributeValue;\n  }\n}\n\nfunction UnquotedAttributeValue(c) {\n  if (c.match(/^[\\t\\n\\f ]$/)) {\n    cunrrentToken[cunrrentAttribute.name] = cunrrentAttribute.value;\n    return beforeAttributeName;\n  } else if (c == \"/\") {\n    cunrrentToken[cunrrentAttribute.name] = cunrrentAttribute.value;\n    return selfCloseingStartTag;\n  } else if (c == \">\") {\n    cunrrentToken[cunrrentAttribute.name] = cunrrentAttribute.value;\n    emit(cunrrentToken);\n    return data;\n  } else if (c == \"\\0\") {} else if (c == \"\\\"\" || C == \"'\" || c == \"<\" || c == \"=\" || c == \"`\") {} else if (c == EOF) {} else {\n    cunrrentAttribute.name += c;\n    return UnquotedAttributeValue;\n  }\n}\n\nfunction afterQuotedAttributeValue(c) {\n  if (c.match(/^[\\t\\n\\f ]$/)) {\n    return beforeAttributeName;\n  } else if (c == \"/\") {\n    return selfCloseingStartTag;\n  } else if (c == \">\") {\n    cunrrentToken[cunrrentAttribute.name] = cunrrentAttribute.value;\n    emit(cunrrentToken);\n    return data;\n  } else if (c == EOF) {} else {\n    cunrrentAttribute.name += c;\n    return doubleQuotedAttributeValue;\n  }\n}\n\nfunction attributeName(c) {}\n\nfunction selfCloseingStartTag(c) {\n  if (c == \">\") {\n    cunrrentToken.isSelfClosing = true;\n    return data;\n  } else if (c == \"EOF\") {} else {}\n}\n\nfunction paserHTML(html) {\n  console.log(\"------\");\n  console.log(html);\n  var state = data;\n\n  var _iterator4 = _createForOfIteratorHelper(html),\n      _step4;\n\n  try {\n    for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n      var c = _step4.value;\n      state = state(c);\n    }\n  } catch (err) {\n    _iterator4.e(err);\n  } finally {\n    _iterator4.f();\n  }\n\n  state = state(EOF);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "parser.js"
      ],
      "names": [
        "css",
        "require",
        "layout",
        "cunrrentToken",
        "cunrrentAttribute",
        "stack",
        "type",
        "children",
        "cunrrentTextNode",
        "rules",
        "specificity",
        "selector",
        "p",
        "selectorParts",
        "split",
        "part",
        "charAt",
        "compare",
        "sp1",
        "sp2",
        "addCSSRules",
        "text",
        "ast",
        "parse",
        "console",
        "log",
        "JSON",
        "stringify",
        "push",
        "stylesheet",
        "match",
        "element",
        "attibutes",
        "attr",
        "filter",
        "name",
        "value",
        "replace",
        "tagName",
        "computeCSS",
        "slice",
        "reverse",
        "computedStyle",
        "rule",
        "selectors",
        "splict",
        "matched",
        "j",
        "i",
        "length",
        "sp",
        "declarations",
        "declaration",
        "property",
        "emit",
        "token",
        "top",
        "parent",
        "isSelfClosing",
        "Error",
        "content",
        "pop",
        "EOF",
        "Symbol",
        "data",
        "c",
        "tagOpen",
        "endTagOpen",
        "beforeAttributeName",
        "selfCloseingStartTag",
        "afterAttributeName",
        "attributeName",
        "beforeAttributeValue",
        "C",
        "doubleQuotedAttributeValue",
        "singleQuotedAttributeValue",
        "UnquotedAttributeValue",
        "afterQuotedAttributeValue",
        "paserHTML",
        "html",
        "state"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/htjc-yu/Desktop/js1000hours/training/工具链18/html-parser/src/",
      "sourcesContent": [
        "const css = require(\"css\");\nconst layout = require(\"./4_1_layout.js\")\nlet cunrrentToken = null;\nlet cunrrentAttribute = null;\nlet stack = [{\n    type: \"document\",\n    children: []\n}];\nlet cunrrentTextNode = null;\nlet rules = [];\n\nfunction specificity(selector){\n    var p = [0,0,0,0];\n    var selectorParts = selector.split(\" \");\n    for(var part of selectorParts){\n        if(part.charAt(0)==\"#\"){\n            p[1] += 1;\n        }else if(part.charAt(0)==\".\"){\n            p[2]+=1;\n        }else {\n            p[3]+=1;\n        }\n    }\n    return p;\n}\n\nfunction compare(sp1,sp2){\n    if(sp1[0]-sp2[0])\n        return sp1[0]-sp2[0]\n    if(sp1[1]-sp2[1])\n        return sp1[1]-sp2[1]\n    if(sp1[2]-sp2[2])\n        return sp1[2]-sp2[2];\n    return sp1[3]-sp2[3];\n}\n\nfunction addCSSRules(text) {\n    var ast = css.parse(text);\n    console.log(JSON.stringify(ast, null, \"  \"));\n    rules.push(...ast.stylesheet.rules);\n}\n\nfunction match(element,selector){\n    if(!selector||!element.attibutes)\n        return false;\n    if(selector.charAt(0)==\"#\"){\n        var attr = element.attibutes.filter(attr=>attr.name===\"id\")[0];\n        if(attr&&attr.value===selector.replace(\"#\",''))\n            return true;\n\n    }else if(selector.charAt(0)==\".\"){\n        var attr = element.attibutes.filter(attr=>attr.name===\"class\")[0];\n        if(attr&&attr.value===selector.replace(\"#\",'.'))\n            return true;\n    }else {\n        if(element.tagName=== selector){\n            return true;\n        }\n    }\n    return false;\n}\n\nfunction computeCSS(element) {\n    console.log(rules);\n    console.log(\"comput CSS for Element\", element);\n    var element = stack.slice().reverse();\n    if (!element.computedStyle)\n        element.computedStyle = {};\n\n    for (let rule of rules) {\n        var selectorParts = rule.selectors[0].splict(\" \").reverse();\n\n        if (!match(element.selectorParts[0]))\n            continue\n        let matched = false;\n        var j = 1;\n        for (var i = 0; i < element.length; i++) {\n            if (match(element[i], selectorParts[j])) {\n                j++;\n            }\n        };\n        if (j > selectorParts.length)\n            matched = true;\n        if (matched) {\n            var sp = specificity(rule.selectors[0])\n            var computedStyle = element.computedStyle;\n            for(var declaration of rule.declarations){\n                if(!computedStyle[declaration.property])\n                    computedStyle[declaration.property] = {}\n                if(!computedStyle[declaration.property].specificity){\n                    computedStyle[declaration.property].value = declaration.value;\n                    computedStyle[declaration.property].specificity = sp;\n                }else if(compare(computedStyle[declaration.property].specificity,sp)<0){\n                    computedStyle[declaration.property].value = declaration.value;\n                    computedStyle[declaration.property].specificity = sp;\n                }\n            }\n            console.log(\"Element\", element, \"matched rule\", rule);\n        }\n    }\n}\n\nfunction emit(token) {\n    console.log(token)\n    let top = stack[stack.length - 1];\n    if (token.type == \"startTag\") {\n        let element = {\n            type: \"element\",\n            children: [],\n            attibutes: []\n        };\n        element.tagName = token.tagName;\n        for (let p in token) {\n            if (p != token && p != \"tagName\") {\n                element.attibutes.push({\n                    name: p,\n                    value: token[p]\n                })\n            }\n        }\n        computeCSS(element);\n        top.children.push(element);\n        element.parent = top;\n        if (!token.isSelfClosing) {\n            stack.push(element);\n        }\n        cunrrentTextNode = null;\n    } else if (token.type == \"endTag\") {\n        if (token.tagName != token.tagName) {\n            throw new Error(\"Tag start end doesn't match\")\n        } else {\n            if (top.tagName === \"style\") {\n                addCSSRules(top.children[0].content)\n            }\n            layout(top)\n            stack.pop()\n        }\n        cunrrentTextNode = null;\n    } else if (token.type == \"text\") {\n        if (cunrrentTextNode == null) {\n            cunrrentTextNode = {\n                type: \"text\",\n                content: \"\"\n            }\n            top.children.push(cunrrentTextNode);\n        }\n        cunrrentTextNode.content += token.content;\n    }\n}\nconst EOF = Symbol(\"EOF\");\n\nfunction data(c) {\n    if (c == \"<\") {\n        return tagOpen;\n    } else if (c == EOF) {\n        emit({\n            type: \"EOF\"\n        })\n        return;\n    } else {\n        emit({\n            type: \"text\",\n            content: c\n        })\n        return data\n    }\n}\n\nfunction tagOpen(c) {\n    if (c == \"/\") {\n        return endTagOpen;\n    } else if (c.match(/^[a-zA-Z$]/)) {\n        cunrrentToken = {\n            type: \"startTag\",\n            tagName: \"\"\n        }\n        return tagName(c);\n    } else {\n        return;\n    }\n}\n\nfunction endTagOpen(c) {\n    if (c.match(/^[a-zA-Z]¥/)) {\n        cunrrentToken = {\n            type: \"endTag\",\n            tagName: \"\"\n        }\n        return tagName(c)\n    } else if (c == \">\") {\n\n    } else if (c == EOF) {\n\n    } else {\n\n    }\n}\n\nfunction tagName(c) {\n    if (c.match(/^[\\t\\n\\g ]$/)) {\n        return beforeAttributeName;\n    } else if (c == \"/\") {\n        return selfCloseingStartTag;\n    } else if (c.match(/^[a-zA-Z]$/)) {\n        cunrrentToken.tagName += c\n        return tagName;\n    } else if (c == \">\") {\n        return data;\n    } else {\n        return tagName;\n    }\n}\n\nfunction beforeAttributeName(c) {\n    if (c.match(/^[\\t\\n\\f ]$/)) {\n        return beforeAttributeName;\n    } else if (c == \">\" || c == \"/\" || c == EOF) {\n        return afterAttributeName(c)\n    } else if (c == \"=\") {\n\n    } else {\n        cunrrentAttribute = {\n            name: \"\",\n            value: \"\"\n        }\n        return attributeName(c);\n    }\n}\n\nfunction afterAttributeName(c) {\n    if (c.match(/^[\\t\\n\\f ]$/) || c == \"/\" || c == EOF) {\n        return afterAttributeName(c);\n    } else if (c == \"=\") {\n        return beforeAttributeValue;\n    } else if (c == \"\\u0000\") {\n\n    } else if (c == \"\\\"\" || C == \"'\" || c == \"<\") {\n\n    } else {\n        cunrrentAttribute.name += c;\n        return attributeName\n    }\n\n}\n\nfunction beforeAttributeValue(c) {\n    if (c.match(/^[\\t\\n\\f ]$/) || c == \"/\" || c == EOF) {\n        return beforeAttributeValue;\n    } else if (c == \"\\\"\") {\n        return doubleQuotedAttributeValue;\n    } else if (c == \"\\'\") {\n        return singleQuotedAttributeValue;\n\n    } else if (c == \">\") {\n\n    } else {\n        return UnquotedAttributeValue(c);\n    }\n\n}\n\n\nfunction doubleQuotedAttributeValue(c) {\n    if (c == \"\\\"\") {\n        cunrrentToken[cunrrentAttribute.name] = cunrrentAttribute.value;\n        return afterQuotedAttributeValue;\n    } else if (c == \"\\u0000\") {\n\n    } else if (c == EOF) {\n\n    } else {\n\n        cunrrentAttribute.value += c;\n        return doubleQuotedAttributeValue\n    }\n\n}\n\nfunction singleQuotedAttributeValue(c) {\n    if (c == \"\\'\") {\n        cunrrentToken[cunrrentAttribute.name] = cunrrentAttribute.value;\n        return afterQuotedAttributeValue;\n    } else if (c == \"\\u0000\") {\n\n    } else if (c == EOF) {\n\n    } else {\n\n        cunrrentAttribute.value += c;\n        //    return singleQuotedAttributeValue 奇怪\n        return doubleQuotedAttributeValue\n    }\n\n\n}\n\nfunction UnquotedAttributeValue(c) {\n    if (c.match(/^[\\t\\n\\f ]$/)) {\n        cunrrentToken[cunrrentAttribute.name] = cunrrentAttribute.value;\n        return beforeAttributeName;\n    } else if (c == \"/\") {\n        cunrrentToken[cunrrentAttribute.name] = cunrrentAttribute.value;\n        return selfCloseingStartTag;\n    } else if (c == \">\") {\n        cunrrentToken[cunrrentAttribute.name] = cunrrentAttribute.value;\n        emit(cunrrentToken);\n        return data;\n    } else if (c == \"\\u0000\") {\n\n    } else if (c == \"\\\"\" || C == \"'\" || c == \"<\" || c == \"=\" || c == \"`\") {\n\n    } else if (c == EOF) {} else {\n        cunrrentAttribute.name += c;\n        return UnquotedAttributeValue\n    }\n\n}\n\nfunction afterQuotedAttributeValue(c) {\n    if (c.match(/^[\\t\\n\\f ]$/)) {\n        return beforeAttributeName;\n    } else if (c == \"/\") {\n        return selfCloseingStartTag;\n    } else if (c == \">\") {\n        cunrrentToken[cunrrentAttribute.name] = cunrrentAttribute.value;\n        emit(cunrrentToken);\n        return data;\n    } else if (c == EOF) {\n\n    } else {\n        cunrrentAttribute.name += c;\n        return doubleQuotedAttributeValue\n    }\n\n}\n\n\n\n\nfunction attributeName(c) {\n\n}\n\nfunction selfCloseingStartTag(c) {\n    if (c == \">\") {\n        cunrrentToken.isSelfClosing = true;\n        return data;\n    } else if (c == \"EOF\") {\n\n    } else {\n\n    }\n}\n\nexport function paserHTML(html) {\n    console.log(\"------\")\n    console.log(html);\n    let state = data;\n    for (let c of html) {\n        state = state(c)\n    }\n    state = state(EOF)\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1607008006000
  }
}